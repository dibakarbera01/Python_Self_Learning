
PS C:\Users\dibak\Desktop\python\Python_Scrapy\myproject\myproject> scrapy shell 'https://quotes.toscrape.com/page/1/'
2022-08-04 22:18:18 [scrapy.utils.log] INFO: Scrapy 2.6.2 started (bot: myproject)
2022-08-04 22:18:18 [scrapy.utils.log] INFO: Versions: lxml 4.9.1.0, libxml2 2.9.12, cssselect 1.1.0, parsel 1.6.0, w3lib 1.22.0, Twisted 22.4.0, Python 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)], pyOpenSSL 22.0.0 (OpenSSL 3.0.5 5 Jul 2022), cryptography 37.0.4, Platform Windows-10-10.0.22621-SP0
2022-08-04 22:18:18 [scrapy.crawler] INFO: Overridden settings:
{'BOT_NAME': 'myproject',
 'DUPEFILTER_CLASS': 'scrapy.dupefilters.BaseDupeFilter',
 'LOGSTATS_INTERVAL': 0,
 'NEWSPIDER_MODULE': 'myproject.spiders',
 'ROBOTSTXT_OBEY': True,
 'SPIDER_MODULES': ['myproject.spiders']}
2022-08-04 22:18:18 [scrapy.utils.log] DEBUG: Using reactor: twisted.internet.selectreactor.SelectReactor
2022-08-04 22:18:18 [scrapy.extensions.telnet] INFO: Telnet Password: 66d78f284bc9cc85
2022-08-04 22:18:18 [scrapy.middleware] INFO: Enabled extensions:
['scrapy.extensions.corestats.CoreStats',
 'scrapy.extensions.telnet.TelnetConsole']
2022-08-04 22:18:18 [scrapy.middleware] INFO: Enabled downloader middlewares:
['scrapy.downloadermiddlewares.robotstxt.RobotsTxtMiddleware',
 'scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',
 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',
 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',
 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',
 'scrapy.downloadermiddlewares.retry.RetryMiddleware',
 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',
 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',
 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',
 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',
 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',
 'scrapy.downloadermiddlewares.stats.DownloaderStats']
2022-08-04 22:18:18 [scrapy.middleware] INFO: Enabled spider middlewares:
['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',
 'scrapy.spidermiddlewares.offsite.OffsiteMiddleware',
 'scrapy.spidermiddlewares.referer.RefererMiddleware',
 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',
 'scrapy.spidermiddlewares.depth.DepthMiddleware']
2022-08-04 22:18:18 [scrapy.middleware] INFO: Enabled item pipelines:
[]
2022-08-04 22:18:18 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:6023
2022-08-04 22:18:18 [scrapy.core.engine] INFO: Spider opened
2022-08-04 22:18:20 [scrapy.core.engine] DEBUG: Crawled (404) <GET https://quotes.toscrape.com/robots.txt> (referer: None)
2022-08-04 22:18:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://quotes.toscrape.com/page/1/> (referer: None)
2022-08-04 22:18:20 [asyncio] DEBUG: Using proactor: IocpProactor
[s] Available Scrapy objects:
[s]   scrapy     scrapy module (contains scrapy.Request, scrapy.Selector, etc)
[s]   crawler    <scrapy.crawler.Crawler object at 0x0000023BAF0A3670>
[s]   item       {}
[s]   request    <GET https://quotes.toscrape.com/page/1/>
[s]   response   <200 https://quotes.toscrape.com/page/1/>
[s]   settings   <scrapy.settings.Settings object at 0x0000023BAF0A36D0>
[s]   spider     <DefaultSpider 'default' at 0x23baf65dae0>
[s] Useful shortcuts:
[s]   fetch(url[, redirect=True]) Fetch URL and update local objects (by default, redirects are followed)
[s]   fetch(req)                  Fetch a scrapy.Request and update local objects
[s]   shelp()           Shell help (print this help)
[s]   view(response)    View response in a browser
2022-08-04 22:18:20 [asyncio] DEBUG: Using proactor: IocpProactor
In [1]: response
Out[1]: <200 https://quotes.toscrape.com/page/1/>

In [2]: response.css('title')
Out[2]: [<Selector xpath='descendant-or-self::title' data='<title>Quotes to Scrape</title>'>]

In [3]: response.css('title').getall()
Out[3]: ['<title>Quotes to Scrape</title>']

In [4]: response.css('title').getall()[0]
Out[4]: '<title>Quotes to Scrape</title>'

In [5]: response.css('title').getall()
Out[5]: ['<title>Quotes to Scrape</title>']

In [6]: response.css('title::text').getall()[0]
Out[6]: 'Quotes to Scrape'

In [7]: response.css('title::text').get()
Out[7]: 'Quotes to Scrape'

In [8]: response.css("div.quote").get()
Out[8]: '<div class="quote" itemscope itemtype="http://schema.org/CreativeWork">\n        <span class="text" itemprop="text">“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”</span>\n        <span>by <small class="author" itemprop="author">Albert Einstein</small>\n        <a href="/author/Albert-Einstein">(about)</a>\n        </span>\n        <div class="tags">\n            Tags:\n            <meta class="keywords" itemprop="keywords" content="change,deep-thoughts,thinking,world"> \n            \n            <a class="tag" href="/tag/change/page/1/">change</a>\n            \n            <a class="tag" href="/tag/deep-thoughts/page/1/">deep-thoughts</a>\n            \n            <a class="tag" href="/tag/thinking/page/1/">thinking</a>\n            \n            <a class="tag" href="/tag/world/page/1/">world</a>\n            \n        </div>\n    </div>'

In [9]: quote = response.css("div.quote").get()

In [10]: quote = response.css("div.quote")[0]

In [11]: title = quote.css("span.text").get()

In [12]: print(title)
<span class="text" itemprop="text">“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”</span>

In [13]: author = quote.css("small.author::text").get()

In [14]: print(author)
Albert Einstein

In [15]: tags = quote.css("a.tag::text").getall()

In [16]: print(tags)
['change', 'deep-thoughts', 'thinking', 'world']

In [17]: for q in response.css("div.quote"):
    ...:     text = quote.css("span.text::text").get()
    ...:     print(text)
    ...:
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”

In [18]: for q in response.css("div.quote"):
    ...:     text = q.css("span.text::text").get()
    ...:     print(text)
    ...:
“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”
“It is our choices, Harry, that show what we truly are, far more than our abilities.”
“There are only two ways to live your life. One is as though nothing is a miracle. The other is as though everything is a miracle.”
“The person, be it gentleman or lady, who has not pleasure in a good novel, must be intolerably stupid.”
“Imperfection is beauty, madness is genius and it's better to be absolutely ridiculous than absolutely boring.”
“Try not to become a man of success. Rather become a man of value.”
“It is better to be hated for what you are than to be loved for what you are not.”
“I have not failed. I've just found 10,000 ways that won't work.”
“A woman is like a tea bag; you never know how strong it is until it's in hot water.”
“A day without sunshine is like, you know, night.”

In [19]: exit